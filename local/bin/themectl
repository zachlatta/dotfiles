#!/bin/bash
#
# Color scheme manager.

show_help() {
  cat <<EOF
Switch theme mode to light or dark.

Usage: themectl [light|dark|current]
EOF

  exit 1
}

switch_mode() {
  local mode="$1"

  # Update symlinks
  ln -sf "$DOTFILES/tmux.color-$mode.conf" \
    "$DOTFILES/tmux.color.conf"
  ln -sf "$DOTFILES/vim/color/set-background-$mode.vim" \
    "$DOTFILES/vim/color/set-background.vim"
  ln -sf "$DOTFILES/config/termite/config-$mode" \
    "$DOTFILES/config/termite/config"
  ln -sf "$DOTFILES/Xresources.d/colors-$mode" \
    "$DOTFILES/Xresources.d/colors"

  # Reload tmux config if it's installed
  [ -x "$(command -v tmux)" ] && tmux source-file ~/.tmux.conf

  # Reload Termite config if it's installed
  [ -x "$(command -v termite)" ] && killall -USR1 termite

  # Reload .Xresources if xrdb is installed
  [ -x "$(command -v xrdb)" ] && xrdb -load ~/.Xresources

  # Reload i3 if it's installed
  [ -x "$(command -v i3)" ] && i3-msg restart

  # If we're on squirtle, then also run this command on charmander.
  if [ "$(hostname)" = "squirtle" ]; then
    echo "themectl $mode" | ssh -T zrl@charmander.zachlatta.com
  fi
}

print_current_mode() {
  local vim_color_file="$(
    greadlink -f "$DOTFILES/vim/color/set-background.vim" | xargs basename
  )"

  if [ "$vim_color_file" = "set-background-light.vim" ]; then
    echo "light"
  elif [ "$vim_color_file" = "set-background-dark.vim" ]; then
    echo "dark"
  else
    >&2 echo "error! no current theme set"
    exit 1
  fi
}

handle_command_line() {
  local cmd="$1"

  case "$cmd" in
    "light")
      switch_mode "light"
      ;;
    "dark")
      switch_mode "dark"
      ;;
    "current")
      print_current_mode
      ;;
    *)
      show_help
      ;;
  esac
}

if [ "$#" -eq 0 ]; then
  show_help
fi

handle_command_line "$@"
